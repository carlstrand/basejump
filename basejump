#!/bin/bash

set -e

distro=$(uname)

function msg_status () {
    echo -e "\x1B[01;34m[*]\x1B[0m $1" 
}
function msg_good () { 
    echo -e "\x1B[01;32m[*]\x1B[0m $1" 
}
function msg_error () { 
    echo -e "\x1B[01;31m[*]\x1B[0m $1" 
}
function msg_notification () { 
    echo -e "\x1B[01;33m[*]\x1B[0m $1"
}

msg_status "let's basejump!"

sudo -v

os-check(){
    msg_notification "checking operating system"
        if [ "$distro" == "Linux" ]; then
            msg_good "$distro is supported, continuing"
        elif [ "$distro" == "MacOS" ]; then
            msg_good "$distro is supported, continuing"
        fi
}

software-check(){
  msg_notification "checking for required software"
    for cli in python pip git sudo; do
      if ! type "$cli" > /dev/null 2>&1; then
        msg_error "$cli is not installed - install that and try again"; exit 1
      fi
  	done
  msg_good "all required software installed"
}

software-check-mac(){
  msg_notification "checking for specific macOS required software"
    for cli in ruby; do
      if ! type "$cli" > /dev/null 2>&1; then
        msg_error "$cli is not installed - install that and try again"; exit 1
      fi
  	done
  msg_good "specific macOS software installed"
}

install-ansible(){
  if ! type "ansible" > /dev/null 2>&1; then
    msg_notification "ansible not installed, enter sudo password to install"
    sudo pip3 install --upgrade pip
    sudo pip3 install ansible
  fi
  msg_good "ansible is installed"
}

install-xcode(){
    if ! command -v cc >/dev/null; then
        msg_notification "xcode commandline tools not installed, installing"
        xcode-select --install
    else
        msg_good "xcode already installed, continuing"
    fi
    if ! command -v cc >/dev/null; then
        msg_error "xcode commandline tools install failed - see output and try again"; exit 1
    else
        msg_good "xcode commandline tools installed"
    fi
}

install-homebrew(){
    if ! command -v brew >/dev/null; then
        msg_notification "homebrew not installed, installing"
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" </dev/null
    else
        msg_good "homebrew already installed, continuing"
    fi
    if ! command -v brew >/dev/null; then
        msg_error "homebrew install failed - see output and try again"; exit 1
    else
        msg_good "homebrew installed"
    fi
}

run-ansible(){
    msg_status "handing off to ansible!"
    cd ansible
    ansible-galaxy install -r requirements.yml
    ansible-playbook main.yml -i inventory
}

main(){
    os-check;
    software-check;
    #if [ "$distro" == "MacOS" ]; then
    #    software-check-mac;
    #fi
    install-ansible;
    #if [ "$distro" == "MacOS" ]; then
    #  msg_good "since this is $distro, checking for xcode commandline tools"
    #  install-xcode;
    #  msg_good "since this is $distro, checking for homebrew"
    #fi
    run-ansible;
}

main;

exit 0
